FROM php:8.2-fpm

WORKDIR /var/www

ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

RUN chmod +x /usr/local/bin/install-php-extensions && sync && \
	install-php-extensions mbstring pdo_mysql zip exif pcntl gd memcached

RUN pecl install redis && docker-php-ext-enable redis

# Install dependencies
RUN apt-get update && apt-get install -y \
	build-essential \
	libpng-dev \
	libjpeg62-turbo-dev \
	libfreetype6-dev \
	locales \
	zip \
	jpegoptim optipng pngquant gifsicle \
	unzip \
	git \
	curl \
	lua-zlib-dev \
	libmemcached-dev \
	nginx \
	libpq-dev \
	jq \
	nano \
	libicu-dev

RUN curl -sLS https://deb.nodesource.com/setup_18.x | bash - \
	&& apt-get install -y nodejs

RUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql

RUN docker-php-ext-install pdo pdo_pgsql pgsql bcmath intl opcache ftp

# Install supervisor
RUN apt-get install -y supervisor

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Add user for laravel application
RUN groupadd -g 1000 www
RUN useradd -u 1000 -ms /bin/bash -g www www

# Copy code to /var/www
COPY --chown=www:www-data . /var/www
COPY --chown=www:www-data .env.prod /var/www/.env

# add root to www group
RUN chmod -R ug+w /var/www/storage

# Copy nginx/php/supervisor configs
RUN cp docker/supervisor.conf /etc/supervisord.conf
RUN cp docker/php.ini /usr/local/etc/php/conf.d/app.ini
RUN cp docker/nginx.conf /etc/nginx/sites-enabled/default
COPY ./docker/opcache.ini /usr/local/etc/php/conf.d/opcache.ini


# PHP Error Log Files
RUN mkdir /var/log/php

RUN touch /var/log/php/error.log && chmod 777 /var/log/php/error.log
RUN touch /var/log/php/access.log && chmod 777 /var/log/php/access.log
RUN touch /var/log/php/queue.log && chmod 777 /var/log/php/queue.log
RUN touch /var/log/php/schedule.log && chmod 777 /var/log/php/schedule.log

RUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log
RUN ln -sf /dev/stdout /var/log/php/access.log && ln -sf /dev/stderr /var/log/php/error.log
RUN ln -sf /dev/stderr /var/log/php/queue.log
RUN ln -sf /dev/stderr /var/log/php/schedule.log

# Deployment steps
RUN composer install --optimize-autoloader --no-dev
RUN npm install --global yarn

RUN yarn install && yarn cache clean
RUN yarn build-all

RUN chmod +x /var/www/docker/kraken.sh


EXPOSE 80

CMD ["/bin/sh", "/var/www/docker/kraken.sh"]